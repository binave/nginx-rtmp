client_max_body_size 50m;
proxy_buffer_size 512k;
proxy_buffers 8 512k;
proxy_busy_buffers_size 512k;
proxy_temp_file_write_size 512k;

log_format json '{"@timestamp":"$time_iso8601","host":"$server_addr","client":"$remote_addr","size":$body_bytes_sent,'
                '"responsetime":$request_time,"url":"$uri","referer":"$http_referer",'
                '"agent":"$http_user_agent","backend":"$upstream_addr","status":"$status"}';

# upstream to_http {
#     server 10.0.0.2:8080;
# }

# upstream to_https {
#     server 10.0.0.2:8443;
# }

# upstream downloadapi {
#     server 127.0.0.1:8088;
#     server 192.168.1.2:8088;
#     server 192.168.1.3:8088;
#     keepalive 64;
# }

server {
    listen       80;
    listen       [::]:80;
    # listen       443 ssl http2;
    # listen       [::]:443 ssl http2;
    server_name  localhost;

    # error_page 497 301 https://$http_host$request_uri;

    # if ($ssl_protocol = "") {
    #     return 301 https://$host$request_uri;
    # }

    # if ($request_method ~* OPTIONS|TRACE) {
    #     return 403;
    # }

    # ssl_certificate /etc/ssl/letsencrypt/live/www.example.com/fullchain.pem;
    # ssl_certificate_key /etc/ssl/letsencrypt/live/www.example.com/privkey.pem;

    add_header X-Frame-Options SAMEORIGIN;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  json;

    location / {
        root /usr/share/nginx/html;
        index  index.html index.htm;
    }

    # location / {
    #     root /usr/share/nginx/html;
    #     index index.html;
    #     try_files $uri $uri/index.html $uri.html @to;
    #     # gzip_static on;
    # }

    # location @to {
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header Host $http_host;
    #     proxy_set_header X-Nginx-Proxy true;
    #
    #     # websocket
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_http_version 1.1;
    #     proxy_set_header Connection "upgrade";
    #
    #     proxy_pass $scheme://to_$scheme;
    # }

    # location ~ ^/prefix-(suffix-1|suffix-2)/ {
    #     root   /data;
    #     autoindex off;
    # }

    # location ^~ /download/ {
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header Host  $http_host;
    #     proxy_set_header X-Nginx-Proxy true;
    #     proxy_set_header Connection "";
    #     proxy_pass http://downloadapi;
    # }

    # location ^~ /uml/ {
    #     sub_filter '="/'  '="/uml/';
    #     sub_filter 'http://10.0.0.2:8008/' 'https://$host/uml/';
    #     sub_filter_once off;
    #
    #     # rewrite / /info redirect;
    #
    #     # # https://localhost/param -> http://10.0.0.2:8008/param
    #     # proxy_pass http://10.0.0.2:8008;
    #
    #     # # https://localhost/param -> http://10.0.0.2:8008
    #     proxy_pass http://10.0.0.2:8008/;
    #
    #     # proxy_redirect http:// https://;
    # }

    # location ~ ^/sub/ {
    #     # # https://localhost/sub/path -> /usr/share/nginx/html/path
    #     # alias /usr/share/nginx/html/;
    #
    #     # https://localhost/sub/path -> /usr/share/nginx/html/sub/path
    #     root /usr/share/nginx/html/;
    # }

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}

